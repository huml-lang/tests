[
	{"name": "empty_input", "input": "", "error": true},
	{"name": "whitespace_only", "input": "   \n  \n  ", "error": true},
	{"name": "comments_only", "input": "# comment\n# another comment", "error": true},
	{"name": "version_directive_only", "input": "%HUML v0.1.0", "error": true},
	{"name": "version_directive_invalid", "input": "%HUML 1.0 # version comment", "error": true},
	{"name": "version_directive_invalid", "input": " %HUML 1.0 # version comment", "error": true},
	{"name": "version_directive_invalid", "input": " %HUML 1.0 ", "error": true},
	{"name": "version_directive_with_root_number", "input": "%HUML v0.1.0\n\n123", "error": false},
	{"name": "version_directive_with_root_string", "input": "%HUML v0.1.0\n\n\"foo\"", "error": false},
	{"name": "version_directive_with_dict", "input": "%HUML v0.1.0\nfoo: true", "error": false},
	{"name": "duplicate_key_error", "input": "key: 1\nkey: 2", "error": true},
	{"name": "invalid_char_after_plus", "input": "key: +abc", "error": true},
	{"name": "invalid_char_after_minus", "input": "key: -abc", "error": true},
	{"name": "string_with_newline", "input": "key: \"line1\nline2\"", "error": true},
	{"name": "trailing_spaces_eof", "input": "key: value   ", "error": true},
	{"name": "comment_trailing_spaces", "input": "# comment ", "error": true},
	{"name": "blank_line_trailing_spaces", "input": "key: value\n ", "error": true},
	{"name": "space_before_comma", "input": "key:: a: 1 , b: 2", "error": true},
	{"name": "unquoted_string", "input": "key: value", "error": true},
	{"name": "null_value", "input": "key: null", "error": false},
	{"name": "bool_true", "input": "key: true", "error": false},
	{"name": "bool_false", "input": "key: false", "error": false},
	{"name": "integer", "input": "key: 123", "error": false},
	{"name": "negative_integer", "input": "key: -123", "error": false},
	{"name": "positive_integer", "input": "key: +123", "error": false},
	{"name": "integer_with_underscores", "input": "key: 1_234_567", "error": false},
	{"name": "float", "input": "key: 123.456", "error": false},
	{"name": "negative_float", "input": "key: -123.456", "error": false},
	{"name": "scientific_notation", "input": "key: 6.022e23", "error": false},
	{"name": "scientific_notation_with_sign", "input": "key: 1.5e-10", "error": false},
	{"name": "hex_number", "input": "key: 0xCAFEBABE", "error": false},
	{"name": "octal_number", "input": "key: 0o755", "error": false},
	{"name": "binary_number", "input": "key: 0b11011001", "error": false},
	{"name": "nan_value", "input": "key: nan", "error": false},
	{"name": "positive_infinity", "input": "key: inf", "error": false},
	{"name": "negative_infinity", "input": "key: -inf", "error": false},
	{"name": "positive_infinity_with_sign", "input": "key: +inf", "error": false},
	{"name": "quoted_string", "input": "key: \"hello world\"", "error": false},
	{"name": "quoted_string_with_escapes", "input": "key: \"hello \\\"world\\\"\"", "error": false},
	{"name": "quoted_string_with_unicode", "input": "key: \"hello \u0041 world\"", "error": false},
	{"name": "quoted_string_with_all_escapes", "input": "key: \"test\\n\\t\\r\\f\\\\\\/\\\"\"", "error": false},
	{"name": "multiline_string_backticks", "input": "key: ```\nline1\nline2\n```", "error": false},
	{"name": "multiline_string_triple_quotes", "input": "key: \"\"\"\nline1\nline2\n\"\"\"", "error": false},
	{"name": "quoted_key", "input": "\"quoted-key\": \"value\"", "error": false},
	{"name": "quoted_key_with_space", "input": "\"quoted key\": \"value\"", "error": false},
	{"name": "quoted_key_invalid_value", "input": "\"quoted-key\": value", "error": true},
	{"name": "quoted_key_special_chars", "input": "\"legacy-system.compatibility_mode\": true", "error": false},
	{"name": "value_with_comment", "input": "key: \"value\" # comment", "error": false},
	{"name": "invalid_value_with_comment", "input": "key: value # comment", "error": true},
	{"name": "key_with_comment_after_colon", "input": "key: # comment only", "error": true},
	{"name": "invalid_key", "input": "1: true", "error": true},
	{"name": "invalid_key", "input": "_a: true", "error": true},
	{"name": "empty_value", "input": "key:", "error": true},
	{"name": "empty_value", "input": "key: ", "error": true},
	{"name": "empty_value", "input": "key:  ", "error": true},
	{"name": "empty_value_with_comment", "input": "key:# comment", "error": true},
	{"name": "empty_value_with_comment", "input": "key: # comment", "error": true},
	{"name": "root_empty_list_colon", "input": "::", "error": true},
	{"name": "root_empty_list", "input": ":: []", "error": true},
	{"name": "root_empty_dict", "input": ":: {}", "error": true},
	{"name": "root_inline_list", "input": ":: 1, 2, 3", "error": true},
	{"name": "root_inline_list_other_key", "input": "1, 2, 3\nfoo: 1", "error": true},
	{"name": "root_multiline_list", "input": "::\n  - \"item1\"\n  - \"item2\"", "error": true},
	{"name": "root_multiline_unquoted_values", "input": "::\n  - item1\n  - item2", "error": true},
	{"name": "root_multiline_bad_indentation", "input": "::\n - item1\n  - item2", "error": true},
	{"name": "root_list", "input": ":: []", "error": true},
	{"name": "root_dict", "input": ":: {}", "error": true},
	{"name": "root_dict_comment", "input": "# test\n:: {}", "error": true},
	{"name": "root_scalar", "input": "123", "error": false},
	{"name": "root_scalar_empty", "input": "", "error": true},
	{"name": "root_scalar", "input": "\n\"test\"", "error": false},
	{"name": "root_scalar_with_extra_content", "input": "123\nextra content", "error": true},
	{"name": "root_scalar_with_comment_extra", "input": "\"test\" # comment\nextra", "error": true},
	{"name": "root_scalar_blank_then_extra", "input": "true\n\nextra content", "error": true},
	{"name": "root_invalid", "input": " ::", "error": true},
	{"name": "root_empty_list", "input": "\n\n[]\n\n", "error": false},
	{"name": "root_empty_dict", "input": "\n{}", "error": false},
	{"name": "root_inline_dict", "input": "a: 1, b: 2, c: \"val\"", "error": false},
	{"name": "root_inline_dict_invalid", "input": " a: 1, b: 2, c: \"val\"", "error": true},
	{"name": "root_inline_dict_invalid", "input": "a: 1, b: 2\nc: 3\nd: 4", "error": true},
	{"name": "root_invalid_list", "input": "   []", "error": true},
	{"name": "root_invalid_dict", "input": "   {}", "error": true},
	{"name": "root_invalid_list", "input": "  ::[]", "error": true},
	{"name": "root_invalid_dict", "input": "  ::{}", "error": true},
	{"name": "root_invalid_dict_comment", "input": "# test\n  ::{}", "error": true},
	{"name": "root_invalid_scalar", "input": " 123", "error": true},
	{"name": "root_invalid_scalar", "input": " true", "error": true},
	{"name": "root_invalid_scalar", "input": "\n \"test\"", "error": true},
	{"name": "simple_dict", "input": "dict::\n  key1: \"value1\"\n  key2: \"value2\"", "error": false},
	{"name": "simple_dict_unquoted_values", "input": "dict::\n  key1: value1\n  key2: value2", "error": true},
	{"name": "nested_dict", "input": "outer::\n  inner::\n    key: 123", "error": false},
	{"name": "dict_invalid_char_start", "input": "dict::\n  @invalid: value", "error": true},
	{"name": "dict_value_parse_error", "input": "dict::\n  key: +", "error": true},
	{"name": "empty_dict", "input": "dict:: {}", "error": false},
	{"name": "ambiguous_empty_vector_space", "input": "key:: # comment", "error": true},
	{"name": "inline_dict", "input": "dict:: key1: \"value1\", key2: \"value2\"", "error": false},
	{"name": "inline_vector_empty_list_error", "input": "key:: []trailing", "error": true},
	{"name": "inline_vector_empty_dict_error", "input": "key:: {}trailing", "error": true},
	{"name": "inline_list_comma_error", "input": "key:: 1 2", "error": true},
	{"name": "inline_dict_comma_error", "input": "key:: a: 1 b: 2", "error": true},
	{"name": "inline_dict_missing_colon", "input": "key:: a b", "error": true},
	{"name": "inline_dict_no_space_after_colon", "input": "key:: a:1", "error": true},
	{"name": "inline_dict_value_parse_error", "input": "key:: a: +", "error": true},
	{"name": "inline_dict_trailing_comma_error", "input": "key:: a: 1,trailing", "error": true},
	{"name": "inline_dict_invalid_key", "input": "dict:: 1: true", "error": true},
	{"name": "inline_dict_invalid_key", "input": "dict:: _a: true", "error": true},
	{"name": "simple_list", "input": "list::\n  - \"item1\"\n  - \"item2\"", "error": false},
	{"name": "nested_list", "input": "list::\n  - \"item1\"\n  - ::\n    - \"nested1\"\n    - \"nested2\"", "error": false},
	{"name": "empty_list", "input": "list:: []", "error": false},
	{"name": "inline_list", "input": "list:: 1, 2, 3, 4", "error": false},
	{"name": "mixed_inline_list", "input": "list:: 1, \"string\", true, null", "error": false},
	{"name": "list_no_space_after_dash", "input": "list::\n  -item", "error": true},
	{"name": "list_bad_indent_item", "input": "list::\n    - item", "error": true},
	{"name": "list_not_list_continuation", "input": "list::\n  - item1\n  \"key\": \"value\"", "error": true},
	{"name": "complex_nested_dict", "input": "config::\n  database::\n    host: \"localhost\"\n    port: 5432\n    credentials::\n      username: \"admin\"\n      password: \"secret\"\n      enabled: true\n    features::\n      - 123\n      - \"reporting\"\n      - true\n", "error": false},
	{"name": "trailing_spaces_after_value", "input": "key: value ", "error": true},
	{"name": "trailing_spaces_after_comment", "input": "key: value # comment ", "error": true},
	{"name": "trailing_spaces_on_empty_line", "input": "key: value\n \nother: value", "error": true},
	{"name": "trailing_spaces_after_colon_no_value", "input": "key: ", "error": true},
	{"name": "trailing_spaces_after_double_colon", "input": "key:: ", "error": true},
	{"name": "trailing_spaces_after_inline_dict", "input": "key:: foo: 1, bar: \"two\" ", "error": true},
	{"name": "trailing_spaces_after_inline_dict", "input": "key:: foo: 1, bar: \"two\"   ", "error": true},
	{"name": "trailing_spaces_after_inline_dict", "input": "key:: foo: 1, bar: \"two\", baz: true   ", "error": true},
	{"name": "trailing_spaces_after_inline_list", "input": "key:: 1, 2, true, \"two\"  ", "error": true},
	{"name": "trailing_spaces_after_inline_list", "input": "key:: 1, 2, true, \"two\" ", "error": true},
	{"name": "trailing_spaces_after_inline_list", "input": "key:: 1, 2, true, \"two\"   ", "error": true},
	{"name": "trailing_spaces_after_inline_list", "input": "key:: 1, 2, true, \"two\", true   ", "error": true},
	{"name": "no_space_after_colon", "input": "key:value", "error": true},
	{"name": "multiple_spaces_after_colon", "input": "key:  value", "error": true},
	{"name": "no_space_after_double_colon", "input": "key::value", "error": true},
	{"name": "multiple_spaces_after_double_colon", "input": "key::  value", "error": true},
	{"name": "space_before_colon", "input": "key : value", "error": true},
	{"name": "space_before_comma_in_list", "input": "list:: 1 , 2, 3", "error": true},
	{"name": "no_space_after_comma_in_list", "input": "list:: 1,2,3", "error": true},
	{"name": "multiple_spaces_after_comma", "input": "list:: 1,  2, 3", "error": true},
	{"name": "space_before_comma_in_dict", "input": "dict:: key1: value1 , key2: value2", "error": true},
	{"name": "comment_without_space_before", "input": "key: value#comment", "error": true},
	{"name": "comment_without_space_after_hash", "input": "key: value #comment", "error": true},
	{"name": "comment_line_without_space_after_hash", "input": "#comment", "error": true},
	{"name": "comment_no_space_before_value", "input": "key:\"value\"# comment", "error": true},
	{"name": "comment_hash_no_space", "input": "key: \"value\"#comment", "error": true},
	{"name": "comment_hash_no_following_space", "input": "key: \"value\" #comment", "error": true},
	{"name": "double_colon_followed_by_comment_no_space", "input": "key::#comment", "error": true},
	{"name": "bad_indentation_too_much", "input": "dict::\n    key: value", "error": true},
	{"name": "bad_indentation_too_little", "input": "dict::\nkey: value", "error": true},
	{"name": "inconsistent_indentation", "input": "dict::\n  key1: value1\n    key2: value2", "error": true},
	{"name": "list_item_bad_indentation", "input": "list::\n  - item1\n    - item2", "error": true},
	{"name": "missing_colon", "input": "key value", "error": true},
	{"name": "invalid_character", "input": "key: @invalid", "error": true},
	{"name": "unclosed_quoted_string", "input": "key: \"unclosed string", "error": true},
	{"name": "invalid_escape_sequence", "input": "key: \"invalid \\x escape\"", "error": true},
	{"name": "incomplete_escape", "input": "key: \"incomplete \\\"", "error": true},
	{"name": "invalid_unicode_escape", "input": "key: \"invalid \\uXXXX\"", "error": true},
	{"name": "incomplete_unicode_escape", "input": "key: \"incomplete \\u12\"", "error": true},
	{"name": "invalid_lines", "input": "root::\n  key: \"value\"\n:something", "error": true},
	{"name": "invalid_lines", "input": "root::\n  key: \"value\"\n:bad\n  another: 123", "error": true},
	{"name": "invalid_lines", "input": "root::\n  key: \"value\"\n::something else", "error": true},
	{"name": "invalid_lines", "input": "root::\n  key: \"value\"\n :something else", "error": true},
	{"name": "invalid_lines", "input": "root::\n  key: \"value\"\n ::something else", "error": true},
	{"name": "invalid_hex_number", "input": "key: 0xGHI", "error": true},
	{"name": "invalid_octal_number", "input": "key: 0o789", "error": true},
	{"name": "invalid_binary_number", "input": "key: 0b123", "error": true},
	{"name": "unclosed_multiline_string", "input": "key: ```\nline1\nline2", "error": true},
	{"name": "unclosed_triple_quoted_string", "input": "key: \"\"\"\nline1\nline2", "error": true},
	{"name": "multiline_string_preserved_indentation", "input": "poem: ```\n      First line\n           Second\n        Third Line\n```", "error": false},
	{"name": "multiline_string_stripped_indentation", "input": "script: \"\"\"\n          First line\n          Second line\n          Third line\n\"\"\"", "error": false},
	{"name": "multiline_string_wrong_indent_backticks", "input": "key::\n    a: ```\n      First line\n           Second\n        Third Line\n", "error": true},
	{"name": "multiline_string_wrong_indent_quotes", "input": "key::\n    b: \"\"\"\n          First line\n          Second line\n          Third line\n", "error": true},
	{"name": "multiline_string_delimiter_without_newline", "input": "key: ```content```", "error": true},
	{"name": "multiline_wrong_closing_indent", "input": "key: ```\n  content\n    ```", "error": true},
	{"name": "multiline_invalid_after_delimiter", "input": "key: ```\n  content\n``` extra", "error": true},
	{"name": "list_item_without_dash", "input": "list::\n  item1\n  item2", "error": true},
	{"name": "dash_without_space", "input": "list::\n-item1\n-item2", "error": true},
	{"name": "empty_dict_again", "input": "dict:: {}\n", "error": false},
	{"name": "empty_list_again", "input": "list:: []\n", "error": false},
	{"name": "list_with_special_values", "input": "values:: null, true, false, nan, inf, -inf", "error": false},
	{"name": "list_with_inline_dicts", "input": "contacts::\n  - :: type: \"admin\", email: \"admin@example.com\", bool: true, empty: null\n  - :: type: \"support\", email: \"support@example.com\", bool: true, empty: null", "error": false},
	{"name": "list_with_multiline_dicts", "input": "contacts::\n  - ::\n      str: \"admin\"\n      num: 1234\n  - ::\n      str: \"admin2\"\n      num: 45.67", "error": false},
	{"name": "multiline_dict_invalid_key", "input": "dict::\n  1: true", "error": true},
	{"name": "multiline_dict_invalid_key", "input": "dict::\n  _a: true", "error": true},
	{"name": "list_with_badly_indented_multiline_dicts", "input": "contacts::\n  - ::\n      str: \"admin\"\n      num: 1234\n  - ::\n      str: \"admin2\"\n      num: 45.67", "error": true},
	{"name": "list_with_multiline_dicts", "input": "contacts::\n  - ::\n    str: \"admin\"\n    num: 1234\n  - ::\n    str: \"admin2\"\n    num: 45.67", "error": false}
]
